# Makefile generated by ucpp: https://github.com/nikitakit/ucpp
# Run `ucpp configure` to regenerate the makefile
# Do not edit!!!
#
# The file ".wrmakefile" is the template used by the Wind River Workbench to
# generate the makefiles of this project. Add user-specific build targets and
# make rules only(!) in this project's ".wrmakefile" file. These will then be
# automatically dumped into the makefiles.

export WIND_HOME=/home/anirudh/.ucpp/gccdist/WindRiver
export WIND_BASE=/home/anirudh/.ucpp/gccdist/WindRiver/vxworks-6.3
export WIND_LIC_PROXY=/home/anirudh/.ucpp/gccdist/WindRiver/setup/x86-win32/bin/
export LM_LICENSE_FILE=/home/anirudh/.ucpp/gccdist/WindRiver/license/zwrsLicense.lic
export WINEDEBUG=fixme-all

WIND_HOME := $(subst \,/,$(WIND_HOME))
WIND_BASE := $(subst \,/,$(WIND_BASE))
WIND_USR := $(subst \,/,$(WIND_USR))

all : pre_build main_all post_build

_clean ::
	@echo "make: removing targets and objects of `pwd`"

TRACE=0
TRACEON=$(TRACE:0=@)
TRACE_FLAG=$(TRACEON:1=)

MAKEFILE := Makefile

FLEXIBLE_BUILD := 1

BUILD_SPEC = PPC603gnu
DEBUG_MODE = 1
ifeq ($(DEBUG_MODE),1)
MODE_DIR := Debug
else
MODE_DIR := NonDebug
endif
OBJ_DIR := .
PRJ_ROOT_DIR := /home/anirudh/Projects/Robotics/git/612-2013
WS_ROOT_DIR := /home/anirudh/Projects/Robotics/git



#Global Build Macros
PROJECT_TYPE = DKM
DEFINES = 
EXPAND_DBG = 0


#BuildSpec specific Build Macros
VX_CPU_FAMILY = ppc
CPU = PPC603
TOOL_FAMILY = gnu
TOOL = gnu
TOOL_PATH = wine /home/anirudh/.ucpp/gccdist/WindRiver/gnu/3.4.4-vxworks-6.3/x86-win32/bin/
CC_ARCH_SPEC = -mcpu=603 -mstrict-align -mno-implicit-fp  -mlongcall
LIBPATH = 
LIBS = 

IDE_INCLUDES = -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/h/WPILib -I$(WIND_BASE)/target/h/wrn/coreip -I. 

IDE_LIBRARIES = $(WIND_BASE)/target/lib/WPILib.a 



#BuildTool flags
ifeq ($(DEBUG_MODE),1)
DEBUGFLAGS_C-Compiler = -g
DEBUGFLAGS_C++-Compiler = -g
DEBUGFLAGS_Linker = -g
DEBUGFLAGS_Partial-Image-Linker = 
DEBUGFLAGS_Librarian = 
DEBUGFLAGS_Assembler = -g
else
DEBUGFLAGS_C-Compiler = -O2 -fstrength-reduce -fno-builtin
DEBUGFLAGS_C++-Compiler = -O2 -fstrength-reduce -fno-builtin
DEBUGFLAGS_Linker = -O2 -fstrength-reduce -fno-builtin
DEBUGFLAGS_Partial-Image-Linker = 
DEBUGFLAGS_Librarian = 
DEBUGFLAGS_Assembler = -O2 -fstrength-reduce -fno-builtin
endif


#Project Targets
PROJECT_TARGETS = 612-2013/$(MODE_DIR)/612-2013.out \
	 612-2013_partialImage/$(MODE_DIR)/612-2013_partialImage.o


#Rules

# 612-2013
ifeq ($(DEBUG_MODE),1)
612-2013/$(MODE_DIR)/% : DEBUGFLAGS_C-Compiler = -g
612-2013/$(MODE_DIR)/% : DEBUGFLAGS_C++-Compiler = -g
612-2013/$(MODE_DIR)/% : DEBUGFLAGS_Linker = -g
612-2013/$(MODE_DIR)/% : DEBUGFLAGS_Partial-Image-Linker = 
612-2013/$(MODE_DIR)/% : DEBUGFLAGS_Librarian = 
612-2013/$(MODE_DIR)/% : DEBUGFLAGS_Assembler = -g
else
612-2013/$(MODE_DIR)/% : DEBUGFLAGS_C-Compiler = -O2 -fstrength-reduce -fno-builtin
612-2013/$(MODE_DIR)/% : DEBUGFLAGS_C++-Compiler = -O2 -fstrength-reduce -fno-builtin
612-2013/$(MODE_DIR)/% : DEBUGFLAGS_Linker = -O2 -fstrength-reduce -fno-builtin
612-2013/$(MODE_DIR)/% : DEBUGFLAGS_Partial-Image-Linker = 
612-2013/$(MODE_DIR)/% : DEBUGFLAGS_Librarian = 
612-2013/$(MODE_DIR)/% : DEBUGFLAGS_Assembler = -O2 -fstrength-reduce -fno-builtin
endif
612-2013/$(MODE_DIR)/% : IDE_INCLUDES = -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/h/WPILib -I$(WIND_BASE)/target/h/wrn/coreip -I. 
612-2013/$(MODE_DIR)/% : IDE_LIBRARIES = $(WIND_BASE)/target/lib/WPILib.a 
612-2013/$(MODE_DIR)/% : PROJECT_TYPE = DKM
612-2013/$(MODE_DIR)/% : DEFINES = 
612-2013/$(MODE_DIR)/% : EXPAND_DBG = 0
612-2013/$(MODE_DIR)/% : VX_CPU_FAMILY = ppc
612-2013/$(MODE_DIR)/% : CPU = PPC603
612-2013/$(MODE_DIR)/% : TOOL_FAMILY = gnu
612-2013/$(MODE_DIR)/% : TOOL = gnu
612-2013/$(MODE_DIR)/% : TOOL_PATH = wine /home/anirudh/.ucpp/gccdist/WindRiver/gnu/3.4.4-vxworks-6.3/x86-win32/bin/
612-2013/$(MODE_DIR)/% : CC_ARCH_SPEC = -mcpu=603 -mstrict-align -mno-implicit-fp  -mlongcall
612-2013/$(MODE_DIR)/% : LIBPATH = 
612-2013/$(MODE_DIR)/% : LIBS = 
612-2013/$(MODE_DIR)/% : OBJ_DIR := 612-2013/$(MODE_DIR)

OBJECTS_612-2013 = 612-2013_partialImage/$(MODE_DIR)/612-2013_partialImage.o

612-2013/$(MODE_DIR)/612-2013.out : $(OBJECTS_612-2013)
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@";rm -f "$@";$(TOOL_PATH)nmppc.exe $(OBJECTS_612-2013) $(IDE_LIBRARIES) | tclsh $(WIND_BASE)/host/resource/hutils/tcl/munch.tcl -c ppc > $(OBJ_DIR)/ctdt.c; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_Linker) $(CC_ARCH_SPEC) -fdollars-in-identifiers -Wall $(ADDED_CFLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES)  -o $(OBJ_DIR)/ctdt.o -c $(OBJ_DIR)/ctdt.c; $(TOOL_PATH)ccppc.exe -r -nostdlib -Wl,-X -T $(WIND_BASE)/target/h/tool/gnu/ldscripts/link.OUT -o "$@" $(OBJ_DIR)/ctdt.o $(OBJECTS_612-2013) $(IDE_LIBRARIES) $(LIBPATH) $(LIBS)  $(ADDED_LIBPATH) $(ADDED_LIBS) && if [ "$(EXPAND_DBG)" = "1" ]; then plink "$@";fi

612-2013/$(MODE_DIR)/612-2013_compile_file : $(FILE) ;

_clean :: 612-2013/$(MODE_DIR)/612-2013_clean

612-2013/$(MODE_DIR)/612-2013_clean : 
	$(TRACE_FLAG)if [ -d "612-2013" ]; then cd "612-2013"; rm -rf $(MODE_DIR); fi


# 612-2013_partialImage
ifeq ($(DEBUG_MODE),1)
612-2013_partialImage/$(MODE_DIR)/% : DEBUGFLAGS_C-Compiler = -g
612-2013_partialImage/$(MODE_DIR)/% : DEBUGFLAGS_C++-Compiler = -g
612-2013_partialImage/$(MODE_DIR)/% : DEBUGFLAGS_Linker = -g
612-2013_partialImage/$(MODE_DIR)/% : DEBUGFLAGS_Partial-Image-Linker = 
612-2013_partialImage/$(MODE_DIR)/% : DEBUGFLAGS_Librarian = 
612-2013_partialImage/$(MODE_DIR)/% : DEBUGFLAGS_Assembler = -g
else
612-2013_partialImage/$(MODE_DIR)/% : DEBUGFLAGS_C-Compiler = -O2 -fstrength-reduce -fno-builtin
612-2013_partialImage/$(MODE_DIR)/% : DEBUGFLAGS_C++-Compiler = -O2 -fstrength-reduce -fno-builtin
612-2013_partialImage/$(MODE_DIR)/% : DEBUGFLAGS_Linker = -O2 -fstrength-reduce -fno-builtin
612-2013_partialImage/$(MODE_DIR)/% : DEBUGFLAGS_Partial-Image-Linker = 
612-2013_partialImage/$(MODE_DIR)/% : DEBUGFLAGS_Librarian = 
612-2013_partialImage/$(MODE_DIR)/% : DEBUGFLAGS_Assembler = -O2 -fstrength-reduce -fno-builtin
endif
612-2013_partialImage/$(MODE_DIR)/% : IDE_INCLUDES = -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/h/WPILib -I$(WIND_BASE)/target/h/wrn/coreip -I. 
612-2013_partialImage/$(MODE_DIR)/% : IDE_LIBRARIES = $(WIND_BASE)/target/lib/WPILib.a 
612-2013_partialImage/$(MODE_DIR)/% : PROJECT_TYPE = DKM
612-2013_partialImage/$(MODE_DIR)/% : DEFINES = 
612-2013_partialImage/$(MODE_DIR)/% : EXPAND_DBG = 0
612-2013_partialImage/$(MODE_DIR)/% : VX_CPU_FAMILY = ppc
612-2013_partialImage/$(MODE_DIR)/% : CPU = PPC603
612-2013_partialImage/$(MODE_DIR)/% : TOOL_FAMILY = gnu
612-2013_partialImage/$(MODE_DIR)/% : TOOL = gnu
612-2013_partialImage/$(MODE_DIR)/% : TOOL_PATH = wine /home/anirudh/.ucpp/gccdist/WindRiver/gnu/3.4.4-vxworks-6.3/x86-win32/bin/
612-2013_partialImage/$(MODE_DIR)/% : CC_ARCH_SPEC = -mcpu=603 -mstrict-align -mno-implicit-fp  -mlongcall
612-2013_partialImage/$(MODE_DIR)/% : LIBPATH = 
612-2013_partialImage/$(MODE_DIR)/% : LIBS = 
612-2013_partialImage/$(MODE_DIR)/% : OBJ_DIR := 612-2013_partialImage/$(MODE_DIR)

612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/shifter.o : /home/anirudh/Projects/Robotics/git/612-2013/shifter.cpp
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_C++-Compiler) $(CC_ARCH_SPEC) -ansi -Wall  -MD -MP -mlongcall $(ADDED_C++FLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES) -o "$@" -c "$<"


612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/joysmooth.o : /home/anirudh/Projects/Robotics/git/612-2013/joysmooth.cpp
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_C++-Compiler) $(CC_ARCH_SPEC) -ansi -Wall  -MD -MP -mlongcall $(ADDED_C++FLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES) -o "$@" -c "$<"


612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/launcher.o : /home/anirudh/Projects/Robotics/git/612-2013/launcher.cpp
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_C++-Compiler) $(CC_ARCH_SPEC) -ansi -Wall  -MD -MP -mlongcall $(ADDED_C++FLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES) -o "$@" -c "$<"


612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/612.o : /home/anirudh/Projects/Robotics/git/612-2013/612.cpp
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_C++-Compiler) $(CC_ARCH_SPEC) -ansi -Wall  -MD -MP -mlongcall $(ADDED_C++FLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES) -o "$@" -c "$<"


612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/feeder.o : /home/anirudh/Projects/Robotics/git/612-2013/feeder.cpp
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_C++-Compiler) $(CC_ARCH_SPEC) -ansi -Wall  -MD -MP -mlongcall $(ADDED_C++FLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES) -o "$@" -c "$<"


612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/ports.o : /home/anirudh/Projects/Robotics/git/612-2013/ports.cpp
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_C++-Compiler) $(CC_ARCH_SPEC) -ansi -Wall  -MD -MP -mlongcall $(ADDED_C++FLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES) -o "$@" -c "$<"


612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/state.o : /home/anirudh/Projects/Robotics/git/612-2013/state.cpp
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_C++-Compiler) $(CC_ARCH_SPEC) -ansi -Wall  -MD -MP -mlongcall $(ADDED_C++FLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES) -o "$@" -c "$<"


612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/lift.o : /home/anirudh/Projects/Robotics/git/612-2013/lift.cpp
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_C++-Compiler) $(CC_ARCH_SPEC) -ansi -Wall  -MD -MP -mlongcall $(ADDED_C++FLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES) -o "$@" -c "$<"


612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/main.o : /home/anirudh/Projects/Robotics/git/612-2013/main.cpp
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_C++-Compiler) $(CC_ARCH_SPEC) -ansi -Wall  -MD -MP -mlongcall $(ADDED_C++FLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES) -o "$@" -c "$<"


612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/shooterAim.o : /home/anirudh/Projects/Robotics/git/612-2013/shooterAim.cpp
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_C++-Compiler) $(CC_ARCH_SPEC) -ansi -Wall  -MD -MP -mlongcall $(ADDED_C++FLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES) -o "$@" -c "$<"


612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/states/state_climbing.o : /home/anirudh/Projects/Robotics/git/612-2013/states/state_climbing.cpp
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_C++-Compiler) $(CC_ARCH_SPEC) -ansi -Wall  -MD -MP -mlongcall $(ADDED_C++FLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES) -o "$@" -c "$<"


612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/states/state_shooting.o : /home/anirudh/Projects/Robotics/git/612-2013/states/state_shooting.cpp
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_C++-Compiler) $(CC_ARCH_SPEC) -ansi -Wall  -MD -MP -mlongcall $(ADDED_C++FLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES) -o "$@" -c "$<"


612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/states/state_driving.o : /home/anirudh/Projects/Robotics/git/612-2013/states/state_driving.cpp
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe $(DEBUGFLAGS_C++-Compiler) $(CC_ARCH_SPEC) -ansi -Wall  -MD -MP -mlongcall $(ADDED_C++FLAGS) $(IDE_INCLUDES) $(ADDED_INCLUDES) -DCPU=$(CPU) -DTOOL_FAMILY=$(TOOL_FAMILY) -DTOOL=$(TOOL) -D_WRS_KERNEL   $(DEFINES) -o "$@" -c "$<"


OBJECTS_612-2013_partialImage = 612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/shifter.o \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/joysmooth.o \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/launcher.o \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/612.o \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/feeder.o \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/ports.o \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/state.o \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/lift.o \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/main.o \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/shooterAim.o \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/states/state_climbing.o \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/states/state_shooting.o \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/states/state_driving.o 

612-2013_partialImage/$(MODE_DIR)/612-2013_partialImage.o : $(OBJECTS_612-2013_partialImage)
	$(TRACE_FLAG)if [ ! -d "`dirname "$@"`" ]; then mkdir -p "`dirname "$@"`"; fi;echo "building $@"; $(TOOL_PATH)ccppc.exe -r -nostdlib -Wl,-X  -o "$@" $(OBJECTS_612-2013_partialImage) $(LIBPATH) $(LIBS) $(ADDED_LIBPATH) $(ADDED_LIBS)  && if [ "$(EXPAND_DBG)" = "1" ]; then plink "$@";fi

612-2013_partialImage/$(MODE_DIR)/612-2013_partialImage_compile_file : $(FILE) ;

_clean :: 612-2013_partialImage/$(MODE_DIR)/612-2013_partialImage_clean

612-2013_partialImage/$(MODE_DIR)/612-2013_partialImage_clean : 
	$(TRACE_FLAG)if [ -d "612-2013_partialImage" ]; then cd "612-2013_partialImage"; rm -rf $(MODE_DIR); fi

DEP_FILES := 612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/shifter.d 612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/joysmooth.d 612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/launcher.d \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/612.d 612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/feeder.d 612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/ports.d \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/state.d 612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/lift.d 612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/main.d \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/shooterAim.d 612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/states/state_climbing.d 612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/states/state_shooting.d \
612-2013_partialImage/$(MODE_DIR)/Objects/612-2013/states/state_driving.d 
##DEP_FILES not used on Linux##



-include $(PRJ_ROOT_DIR)/*.makefile

-include *.makefile

main_all : external_build $(PROJECT_TARGETS)
	@echo "make: built targets of `pwd`"

# entry point for extending the build
external_build ::
	@echo ""

# main entry point for pre processing prior to the build
pre_build :: $(PRE_BUILD_STEP) generate_sources
	@echo ""

# entry point for generating sources prior to the build
generate_sources ::
	@echo ""

# main entry point for post processing after the build
post_build :: $(POST_BUILD_STEP) deploy_output
	@echo ""

# entry point for deploying output after the build
deploy_output ::
	@echo ""

clean :: external_clean $(CLEAN_STEP) _clean

# entry point for extending the build clean
external_clean ::
	@echo ""


# Custom targets inserted by ucpp

deploy: $(PROJECT_TARGETS)
	wput -u 612-2013/Debug/612-2013.out ftp://anonymous@10.6.12.2/ni-rt/system/FRC_UserProgram.out

undeploy:
	ftp 10.6.12.2 < /home/anirudh/Projects/Robotics/git/ucpp/ucpp/delcode

